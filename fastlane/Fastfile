# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

default_platform(:ios)

platform :ios do
  desc "Run all iOS unit and ui tests."
  lane :test do
    run_tests(scheme: "IronRoadForChildren")
  end

  desc "Sync certificates"
  lane :sync_certificates do
    if ENV["CI"]
      ensure_env_vars(
        env_vars: [
          "FASTLANE_CERTIFICATES_GIT_URL", 
          "APPSTORE_API_KEY_ID", 
          "APPSTORE_ISSUER_ID",
          "KEYCHAIN_PASSWORD"
        ]
      )
  
      create_keychain(
        name: "IRFC_iOS_keychain",
        password: ENV["KEYCHAIN_PASSWORD"],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
  
      app_store_connect_api_key(
        key_id: ENV["APPSTORE_API_KEY_ID"],
        issuer_id: ENV["APPSTORE_ISSUER_ID"],
        key_filepath: "./fastlane/.keys/api_key.p8",
      )

      match(
        type: "appstore",
        #git_private_key: "./fastlane/.keys/github-deploy-key", # match has an issue that the key is only used for pulling but not pushing -> key is added manually to the ssh-agent (https://github.com/fastlane/fastlane/issues/19266)
        keychain_name: "IRFC_iOS_keychain",
        keychain_password: ENV["KEYCHAIN_PASSWORD"]
      )
      match(
        type: "development",
        #git_private_key: "./fastlane/.keys/github-deploy-key", # see above
        keychain_name: "IRFC_iOS_keychain",
        keychain_password: ENV["KEYCHAIN_PASSWORD"]
      )
    else
      match(
        type: "appstore"
      )
      match(
        type: "development"
      )
    end
  end

  lane :release_irfc do
    sync_certificates

    build_app(
        project: "IronRoadForChildren.xcodeproj",
        scheme: "IronRoadForChildren",
        output_name: "IronRoadForChildren.ipa",
        output_directory: "./build/",
        export_method: "app-store"
    )

    upload_to_testflight(
      ipa: "./build/IronRoadForChildren.ipa",
      skip_waiting_for_build_processing: true
    )
  end

  lane :start_ci do |options| 
    new_build_number options
  
    new_version_number options if !options[:v].nil? || !options[:bump_type].nil? || options[:bump_version] == true
  
    git_commit(path: '.', message: "Updated to #{tag_name(options[:tag_postfix])}")
    tag_current_version options
    # push_to_git_remote
  end  

  lane :new_build_number do |options|
    if !options[:b].nil?
      increment_build_number(build_number: options[:b])
    else
      increment_build_number
    end
  end

  lane :new_version_number do |options|
    if !options[:bump_type].nil?
      increment_version_number(bump_type: options[:bump_type])
    elsif !options[:v].nil?
      increment_version_number(version_number: options[:v])
    else
      increment_version_number
    end
  end

  def tag_name(postfix)
    to_append = postfix.nil? ? '' : "_#{postfix}"
    "v#{get_version_number(xcodeproj: "IronRoadForChildren.xcodeproj", target: "IronRoadForChildren")}-b#{get_build_number}#{to_append}"
  end

  lane :tag_current_version do |options|
    add_git_tag(tag: tag_name(options[:tag_postfix]))
  end  
end
